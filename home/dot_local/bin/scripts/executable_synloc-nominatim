#!/bin/env python3

# Copyright 2024  Yushun Cheng <chengys@disroot.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

if __name__ == "__main__":
    from xdg.BaseDirectory import xdg_config_home
    from pathlib import Path
    from geopy.geocoders import Nominatim
    import json

    # Get synloc path.
    synloc_path = Path(xdg_config_home) / "synloc"

    # Read coordinates.
    with open(synloc_path / "latitude", "r") as f:
        latitude = f.read()
    with open(synloc_path / "longitude", "r") as f:
        longitude = f.read()

    # Get data.
    data = Nominatim(user_agent="synloc").reverse(f"{latitude}, {longitude}")

    # Check data.
    data_str = json.dumps(data.raw, ensure_ascii=True, sort_keys=True)
    data_path = synloc_path / "nominatim"
    if data_path.is_file():
        with open(data_path, "r") as f:
            update_data = f.read() != data_str
    else:
        update_data = True

    # Write data.
    if update_data is True:
        with open(data_path, "w") as f:
            f.write(data_str)
