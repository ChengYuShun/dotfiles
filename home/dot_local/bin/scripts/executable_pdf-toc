#!/usr/bin/env python3
"""Add table of contents to PDF files.

=======
License
=======

Copyright (C) 2025  Yushun Cheng

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

"""

import pymupdf


def parse_toc(toc_file, level_indent=2, offset=0):
    res = []
    dismissed_pages = 0
    if isinstance(level_indent, int):
        level_indent = " " * level_indent
    for line in toc_file.readlines():
        level = 1
        while line.startswith(level_indent):
            level += 1
            line = line[len(level_indent):]
        if line.strip() == "DISMISSED":
            dismissed_pages += 1
        else:
            last_comma = line.rindex(",")
            title = line[0:last_comma]
            page_no = int(line[last_comma + 1:]) + offset - dismissed_pages
            res.append([level, title, page_no])
    return res


def toc_to_txt(toc, level_indent=2) -> str:
    lines = []
    for l in toc:
        line = "  " * (l[0] - 1) + l[1] + ", " + str(l[2]) + "\n"
        lines.append(line)
    return "".join(lines)


if __name__ == "__main__":

    import argparse

    parser = argparse.ArgumentParser(
        prog="pdf-toc",
        description="Insert a table of contents into a PDF.",
    )
    subparsers = parser.add_subparsers(dest="command", required=True)
    load_parser = subparsers.add_parser("load", help="Load TOC from text")
    dump_parser = subparsers.add_parser("dump", help="Dump TOC into text")
    parser.add_argument("-i",
                        "--indent",
                        type=int,
                        default=2,
                        help="Indentation level in spaces (default: 2)")

    # Loading.
    load_parser.add_argument("toc_file", help="Path to the TOC text file")
    load_parser.add_argument("input_pdf", help="Path to the input PDF file")
    load_parser.add_argument("output_pdf", help="Path to the output PDF file")
    load_parser.add_argument("-o",
                             "--offset",
                             type=int,
                             default=0,
                             help="Page number offset (default: 0)")

    # Dumping.
    dump_parser.add_argument("input_pdf", help="Path to the input PDF file")
    dump_parser.add_argument("toc_dest", help="Path for TOC to be dumped")

    # Carry out the actions.
    args = parser.parse_args()
    if args.command == "load":
        with open(args.toc_file, "r") as f:
            toc = parse_toc(f, level_indent=args.indent, offset=args.offset)
        doc = pymupdf.open(args.input_pdf)
        doc.set_toc(toc)
        doc.save(args.output_pdf)
    elif args.command == "dump":
        doc = pymupdf.open(args.input_pdf)
        toc = doc.get_toc()
        with open(args.toc_dest, "w") as f:
            f.write(toc_to_txt(toc, level_indent=args.indent))
    else:
        raise Exception("Unknown command")
